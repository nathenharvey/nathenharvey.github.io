<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Nathen Harvey]]></title>
  <link href="http://www.nathenharvey.com/atom.xml" rel="self"/>
  <link href="http://www.nathenharvey.com/"/>
  <updated>2011-12-29T09:02:27-05:00</updated>
  <id>http://www.nathenharvey.com/</id>
  <author>
    <name><![CDATA[Nathen Harvey]]></name>
    <email><![CDATA[nathen@nathenharvey.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Brine your turkey!]]></title>
    <link href="http://www.nathenharvey.com/blog/2011/11/21/brine-your-turkey/"/>
    <updated>2011-11-21T04:48:00-05:00</updated>
    <id>http://www.nathenharvey.com/blog/2011/11/21/brine-your-turkey</id>
    <content type="html"><![CDATA[<p>It&#8217;s Thanksgiving week. That means it&#8217;s time to start prepping your turkey.</p>

<p>In my opinion there are <strong>three very important things required for a terrific turkey</strong>:</p>

<ol>
<li>Start with a fresh turkey, I get mine from <a href="http://www.maplelawn.com/">Maple Lawn Farms</a>.</li>
<li>Brine the turkey (for 12-24 hours)</li>
<li>Once it&#8217;s in the oven, leave it alone!</li>
</ol>


<p>I always prepare mine in an apple cider brine:</p>

<ul>
<li>8 cups apple cider</li>
<li>2/3 cup kosher salt</li>
<li>2/3 cup sugar</li>
<li>1 tablespoon black peppercorns, coarsely crushed</li>
<li>1 tablespoon whole allspice, coarsely crushed</li>
<li>8 (1/8-inch-thick) slices peeled fresh ginger</li>
<li>6 whole cloves</li>
<li>2 bay leaves</li>
<li>1 (12-pound) fresh or frozen turkey, thawed</li>
<li>2 oranges, quartered</li>
<li>6 cups ice</li>
</ul>


<p>Of course, this is for a 12-pound turkey, adjust for the size of your turkey.</p>

<h3>To prepare brine</h3>

<ul>
<li>combine first 8 ingredients in a large saucepan; bring to a boil.</li>
<li>Cook 5 minutes or until sugar and salt dissolve.</li>
<li>Cool completely.</li>
</ul>


<h3>To prepare the turkey</h3>

<ul>
<li>Remove giblets and neck from turkey.</li>
<li>Rinse turkey with cold water; pat dry.</li>
<li>Trim excess fat.</li>
<li>Stuff body cavity with orange quarters.</li>
</ul>


<p>You&#8217;ll need something to to store the turkey in while it brines. Brine bags are relatively easy to find. They can be a bit messy to deal with so you might just use a large stockpot or a bucket. The important things are that the turkey is fully submersed in the brine and that you keep the whole thing cold throughout the process.</p>

<p>Place the turkey in the brine bag or other vessel of your choice and cover with the liquid. Place all of that into a cooler and fill with ice or place it into your refrigerator, if you have the room. Leave the turkey in the brine for 12-24 hours, turning occasionally.</p>

<h3>Cooking the turkey</h3>

<ul>
<li>Remove the turkey from the brine</li>
<li>Discard the brine and orange quarters</li>
<li>Rinse the turkey and pat it dry</li>
</ul>


<p>Cook the turkey as you normally would. I like to start it breast side down for the first 30 minutes at a higher temperature (475&ordm; - 500&ordm;) then flip it over and reduce the heat to 350&ordm; for the remainder. If possible, use a <a href="http://www.williams-sonoma.com/products/digital-voice-alert-thermometer/?pkey=x%7C4%7C1%7C%7C4%7Cmeat%20thermometer%7C%7C0&amp;cm_src=OLDLINK">leave-in thermometer</a> so that you don&#8217;t have to continually open the oven to check the temperature of the turkey.</p>

<p>Once the turkey is done cooking, be sure to let it rest at least 20 minutes before carving.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[I'm Speaking at MongoSV]]></title>
    <link href="http://www.nathenharvey.com/blog/2011/11/21/im-speaking-at-mongosv/"/>
    <updated>2011-11-21T03:57:00-05:00</updated>
    <id>http://www.nathenharvey.com/blog/2011/11/21/im-speaking-at-mongosv</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://nathenharvey.s3-website-us-east-1.amazonaws.com/blog/images/MongoSV_badge.png" width="320" height="156" title="MongoSV" alt="MongoSV"></p>

<p><a href="http://www.10gen.com/events/mongosv-2011">MongoSV</a> is an annual one-day conference in Silicon Valley dedicated to the open source, non-relational database MongoDB. The comprehensive agenda includes 50+ sessions covering topics for both the novice and experienced user, with presentations from 10gen engineers as well as MongoDB users.</p>

<p>I&#8217;m one of the MongoDB users who will be speaking at the conference. The title of my talk is &#8221;<strong>MongoDB at CustomInk - Adoption, Operations, and Community</strong>&#8221;</p>

<p>In this talk I&#8217;ll detail some of the reasons we decided to go with MongoDB, the challenges we faced bringing it into the organization, how we&#8217;re using it in production today, lessons learned, and some of our future plans. The talk will also describe some of the operational considerations for putting MongoDB into production: how do we deploy, operate, and monitor MongoDB. During this talk I&#8217;ll also describe <a href="http://www.customink.com">CustomInk</a>&#8217;s involvement in the MongoDB community.</p>

<p>Since January, CustomInk has been hosting the <a href="http://www.meetup.com/Washington-DC-MongoDB-Users-Group">Washington DC MongoDB Users Group</a>. I&#8217;ll share some of my experience with, tips for, and lessons learned growing a monthly user group.</p>

<p>The talk will be a refreshed and expanded version of the presentation I gave at <a href="http://www.10gen.com/events/mongodc-2011">MongoDC</a> back in June. You can find <a href="http://speakerrate.com/events/985-mongodc">slides and reviews from MongoDC on SpeakerRate</a>.</p>

<p><a href="http://www.10gen.com/">10gen</a> does a great job with these conferences. They&#8217;re always packed full of great information and you&#8217;ll get to meets lots of people from the community. MongoSV is the largest of these one-day conferences that 10gen organizes. This year, the conference also includes the <a href="https://docs.google.com/spreadsheet/viewform?formkey=dGNvYzNpY3BTMHFrZWRVLVpuTktoSmc6MQ">MongoDB Community Awards</a> where you can nominate someone in three different categories:</p>

<ul>
<li>Innovative Application</li>
<li>Community Champion</li>
<li>Contributor</li>
</ul>


<p>If you&#8217;re in Santa Clara on December 9th, or need a reason to be, be sure to stop by MongoSV. I have a discount code I can share with you to lower the cost of admission significantly, just let me know if you&#8217;re interested.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why we chose Chef over Puppet at CustomInk]]></title>
    <link href="http://www.nathenharvey.com/blog/2011/11/21/why-we-chose-chef-over-puppet-at-customink/"/>
    <updated>2011-11-21T03:29:00-05:00</updated>
    <id>http://www.nathenharvey.com/blog/2011/11/21/why-we-chose-chef-over-puppet-at-customink</id>
    <content type="html"><![CDATA[<p>Not unlike most technology choices, the choice of which configuration management tool to use for managing your infrastructure as code is sure to spark debate among opinionated technologists. There are certainly a number of choices available all of which have their own strengths and weaknesses. There are a number of things to consider as you select a tool.</p>

<p>Before we get into any of the specifics, I want to make it clear that the &#8220;right&#8221; answer to this question is a simple, but emphatic &#8220;yes!&#8221; Yes, you should be using a tool that allows you to manage your infrastructure as code. That tool should NOT be a server.txt file that you keep on the machine that documents the installation, set-up, and configuration changes you&#8217;ve made. Moving that text to somewhere other than the local server is a step in the right direction but isn&#8217;t really the answer. Moving the server.txt file to your corporate wiki is going to suck just as bad.</p>

<p>I think Mark Imbriaco summed it up quite nicely in 140 characters or less:</p>

<blockquote><p>Pro-tip: Nobody gives a shit about your opinion of Chef vs. Puppet. Seriously. Just fucking stop it already. #usewhatworksforyou</p><footer><strong>@markimbriaco</strong> <cite><a href='https://twitter.com/markimbriaco/statuses/89180299824599041'>twitter.com/markimbriaco/&hellip;</a></cite></footer></blockquote>


<p>As you consider which tool is right for you, you&#8217;ll need to consider a number of questions. I think of these as the WIIFs, or &#8220;what&#8217;s in it for&#8230;&#8221; questions:</p>

<!--more-->


<h3>WIIFM - What&#8217;s in it for me</h3>

<p>You&#8217;re going to want a tool that you&#8217;re happy working with. You&#8217;re going to make an investment in this tool. You&#8217;ll need to learn to be proficient with the tool, master it, and use it in your everyday workflow. Pick something that you&#8217;ll be happy working with for some time.</p>

<h3>WIIFC - What&#8217;s in it for my customers</h3>

<p>It&#8217;s highly unlikely that your customers know or care anything about how your infrastructure was built, provisioned, and managed. Why should they have any say about which tool you pick? Your customers are keenly interested in the services or products you offer. They also care about things like performance, availability, and how quickly you recover from an issue or outage. If they don&#8217;t care about these things, they&#8217;ll likely not be your customers for long. As you grow your business, you&#8217;ll want to have more time for delivering value to customers. Spend less time building, provisioning, upgrading, and repairing your infrastructure.</p>

<h3>WIIFB - What&#8217;s in it for my business</h3>

<p>You may be the only one who has to build and manage the infrastructure in your company but it&#8217;s likely you&#8217;ll eventually move beyond a technology team of one. As your technology team grows, you&#8217;ll want to include everyone in the process of managing your infrastructure. This includes the people you might not think of as typically having a say in the infrastructure: developers, quality assurance engineers, etc. You do not want to be the only person in your company who knows how to manage the infrastructure and use the tools you&#8217;ve selected. Sure, it gives you a false sense of job security and feeds into your hero-complex but you need to be able to pass the on-call baton to someone else. Cost may also be a factor to consider when selecting a solution although it&#8217;s likely it&#8217;s more of a data-point than selection criteria, given the solutions that are on the market.</p>

<p>I cannot tell you which tool is right for you. There are many factors including the ones I&#8217;ve listed above. I have some experience with both Puppet and Chef. At <a href="http://www.customink.com">CustomInk</a>, we decided to switch to Chef after using Puppet for about two years.</p>

<h2>Why did we switch?</h2>

<h3>We&#8217;re a Rails shop</h3>

<p>CustomInk is a Ruby on Rails shop and has been for many years. Being a Rails shop helped push us towards Chef in two ways. As a Rails shop, we suffer a bit from from the stereotypical &#8220;newer and shinier is better&#8221; syndrome that many people feel ails the Rails community. As a Rails shop, the domain-specific language (DSL) of Chef is a more comfortable way for us to work. Everyone on the technology team can easily understand the code.</p>

<h3>We started with Puppet</h3>

<p>We started with Puppet so, naturally, that&#8217;s the one we switched from. Puppet was, and actually still is, working well for us. However, we found that working in Puppet was going a bit slower than we&#8217;d like. Also, as we started learning more about Chef we started to see how we&#8217;d be able to quickly benefit from some of the features it offers. To be fair, we were comparing the Puppet we were using (0.24.x) to the latest (at the time) version of Chef (0.9.x). There may well have been ways to do the things we wanted with Puppet but we weren&#8217;t. Chef was intriguing and it looked like we&#8217;d be able to get more from it. Instead of working to refactor our Puppet and get smarter with how to use it, we went with Chef.</p>

<h3>Search</h3>

<p>Chef&#8217;s ability to search our environment and use that information at run time is very appealing. The ability for us to define a database.yml template that can have the &#8220;host&#8221; value populated at runtime based on which host is currently the primary database server is great. Using search in our capistrano recipes to determine where the code should be deployed is a huge win.</p>

<h3>Knife</h3>

<p>Knife is Chef&#8217;s powerful command line interface. There are many things you can do with knife, most of which fall outside of the scope of this article. Knife allows you to interact with your entire infrastructure and Chef code base. Use knife to bootstrap a server, build the scaffolding for a new cookbook, or apply a role to a set of nodes in your environment. You can use knife ssh to execute commands on any number of nodes in your environment. knife ssh + search is a very powerful combination. &#8220;Run this command on all nodes with role X.&#8221;</p>

<h3>Dependency Management</h3>

<p>We found that defining dependencies in Puppet was overly verbose and cumbersome. With Chef, order matters and we could rest assured that dependencies would be met if we specified them in the proper order.</p>

<h3>Strong Community</h3>

<p>OpsCode has done a great job of keeping up a strong community. The community.opscode.com site, where hundreds of cookbooks are shared, is a great way to get started. OpsCode has also hosted numerous webinars, publishes all of their training material, and makes it very easy to contribute patches. Frankly, I don&#8217;t have any experience with this in the Puppet world. However, my lack of experience with this in the Puppet world is likely attributed simply to the way my development habits have changed over time. At CustomInk, we&#8217;ve been able to submit patches to chef, a number of cookbooks, and have also published some of our own cookbooks.</p>

<h3>Developer Happiness</h3>

<p>As I mentioned previously, the DSL with Chef is much more comfortable than that of Puppet. The mental model and workflow suit us. I find that the time I spend working in Chef is when I feel most productive and happy.</p>

<p>I often wonder if the reason Chef is the right tool is because it&#8217;s the second one we&#8217;ve used. Coming to infrastructure as code includes a learning curve. I feel that we&#8217;re better Chef developers because we learned from our experience with Puppet. Some may even agree that Chef&#8217;s a better tool because the developers of Chef learned from their experience with Puppet.</p>

<h3>A note for projects that are just getting started</h3>

<p>If your project is just getting started, the best choice for you is probably not to use any of the configuration management tools that allow you to manage your infrastructure as code. You should stay focused exclusively on delivering value to your customers. It&#8217;s likely that the best solution for you is <a href="http://www.heroku.com/">Heroku</a>. Sure, Heroku puts some constraints on how you build your app, but they&#8217;re a good way for you to think creatively. You can, and should, delay your choice of tools until you&#8217;re ready to spin up your first server.</p>

<h2>TL;DR</h2>

<ul>
<li>If the question is &#8220;Chef or Puppet?&#8221;, the answer is &#8220;Yes.&#8221; You need to manage you infrastructure as code</li>
<li>Search, knife, dependency management, community, and developer happiness were the key reasons we switched</li>
<li>Chef is the right tool for us and it might be the right one for you</li>
<li>If you&#8217;re new to the idea of &#8220;Infrastructure as Code&#8221;, understand that there&#8217;s a learning curve but your efforts will be rewarded</li>
</ul>


<p>Did you have to make a similar choice? What were some of the deciding factors? Which tool or framework did you end up with?</p>

<hr />

<p>This was originally posted on my <a href="http://nathenharvey.blogspot.com/2011/11/why-we-chose-puppet-over-chef-at.html">blogger site</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vagrant and VBoxManage import]]></title>
    <link href="http://www.nathenharvey.com/blog/2010/12/27/vagrant-and-vboxmanage-import/"/>
    <updated>2010-12-27T19:25:00-05:00</updated>
    <id>http://www.nathenharvey.com/blog/2010/12/27/vagrant-and-vboxmanage-import</id>
    <content type="html"><![CDATA[<p>I&#8217;ve recently started using <a href="http://vagrantup.com/">Vagrant</a> for building local VMs with VirtualBox. It&#8217;s a great way to test out my <a href="http://www.opscode.com/chef">Chef</a> cookbooks.</p>

<p>I recently ran into an error after a system crash. When I tried to run:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vagrant up
</span></code></pre></td></tr></table></div></figure>


<p>the following error was reported:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>The VM import failed! Try running <span class="sb">`</span>VBoxManage import<span class="sb">`</span> on the box file manually
</span><span class='line'><span class="k">for </span>more verbose error output.
</span></code></pre></td></tr></table></div></figure>


<p>To successfully run VBoxManage import, you first need to locate the .ovf file used by Vagrant when building your VM. Typically, you&#8217;ll find your box definitions in the <code>~/.vagrant/boxes</code> directory. So, I tried to run the command specified from there:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> ~/.vagrant/boxes/base
</span><span class='line'>
</span><span class='line'>VBoxManage import box.ovf
</span><span class='line'>
</span><span class='line'>ERROR: Cannot register the hard disk
</span><span class='line'><span class="s1">&#39;~/.vagrant/boxes/base/vagrant-centos64-disk.vmdk&#39;</span> with UUID
</span><span class='line'><span class="o">{</span>5d2426bf-f04e-40a0-bf36-a27c8d45f920<span class="o">}</span> because a hard disk
</span><span class='line'><span class="s1">&#39;~/.vagrant/boxes/base/vagrant-centos64-disk.vmdk&#39;</span> with UUID
</span><span class='line'><span class="o">{</span>5d2426bf-f04e-40a0-bf36-a27c8d45f920<span class="o">}</span> already exists in the media registry
</span><span class='line'><span class="o">(</span><span class="s1">&#39;~/Library/VirtualBox/VirtualBox.xml&#39;</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>To get around this, I simply removed <code>~/Library/VirtualBox/VirtualBox.xml</code>. I was then able to vagrant up and continue on with my Chef cookbook.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Citizen Cope Concert]]></title>
    <link href="http://www.nathenharvey.com/blog/2010/12/02/citizen-cope-concert/"/>
    <updated>2010-12-02T21:11:00-05:00</updated>
    <id>http://www.nathenharvey.com/blog/2010/12/02/citizen-cope-concert</id>
    <content type="html"><![CDATA[<p>Citizen Cope came to the Rams Head On Stage in Annapolis for 3 sold out solo shows.  I was at the first one and was able to make some fairly good recordings.</p>

<p>The playlist below includes the entire Cope set.  Have a listen and let me know what you think.</p>

<p>This concert is now also available on <a href="http://www.archive.org/details/CitizenCope-LiveAtRamsHeadOnStage-26Nov2010">Live Music Archive</a>.</p>

<object width="480" height="385"><param name="movie" value="http://www.youtube.com/p/BFA9AD670D22F8CF?hl=en_US&amp;fs=1"><param name="allowFullScreen" value="true"><param name="allowscriptaccess" value="always"><embed src="http://www.youtube.com/p/BFA9AD670D22F8CF?hl=en_US&amp;fs=1" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="480" height="385"></embed></object>


<ol>
<li><a href="http://www.youtube.com/watch?v=CkCmd9Q8UMg">Every Waking Moment</a></li>
<li><a href="http://www.youtube.com/watch?v=ka9vdrXATt4">Salvation</a></li>
<li><a href="http://www.youtube.com/watch?v=-acD44WayGE">More Than It Seems</a></li>
<li><a href="http://www.youtube.com/watch?v=R2SVcBRIuoo">Bullet And A Target</a></li>
<li><a href="http://www.youtube.com/watch?v=cMvpUNQ9sHo">Out on the Weekend (Neil Young cover)</a></li>
<li><a href="http://www.youtube.com/watch?v=JAWyAUbjuGA">Holdin&#8217; On</a></li>
<li><a href="http://www.youtube.com/watch?v=U-cQNWG6KRY">All Dressed Up</a></li>
<li><a href="http://www.youtube.com/watch?v=nmHubW0xt3M">Lifeline</a></li>
<li><a href="http://www.youtube.com/watch?v=MoLXeIvsFag">Healing Hands</a></li>
<li><a href="http://www.youtube.com/watch?v=bQw97HbKiZA">Keep Askin&#8217;</a></li>
<li><a href="http://www.youtube.com/watch?v=IdcHdaCnHLg">Pablo Picasso</a></li>
<li><a href="http://www.youtube.com/watch?v=ASrQHQ367hg">D&#8217;Artagnan&#8217;s Theme</a></li>
<li><a href="http://www.youtube.com/watch?v=GFaVnSLKGBY">200,000 (in counterfeit 50 dollar bills)</a></li>
<li><a href="http://www.youtube.com/watch?v=7d2_C-0DVuo">If There&#8217;s Love</a></li>
<li><a href="http://www.youtube.com/watch?v=_HBFALRUiq8">Comin&#8217; Back</a></li>
<li><a href="http://www.youtube.com/watch?v=zcC3D7MZOUc">One Lovely Day</a></li>
<li><a href="http://www.youtube.com/watch?v=CeUeag43IR8">Son&#8217;s Gonna Rise</a></li>
<li><a href="http://www.youtube.com/watch?v=mWfW0Kgoqmc">Sideways</a></li>
<li><a href="http://www.youtube.com/watch?v=Y3cqhOqq7hw">Hurricane Waters</a></li>
<li><a href="http://www.youtube.com/watch?v=xetaamjGX24">Hands of the Saints</a></li>
<li><a href="http://www.youtube.com/watch?v=RtyNYbuyE_w">My Way Home</a></li>
<li><a href="http://www.youtube.com/watch?v=5_8GmyA4V6U">Left For Dead</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Testing mod_rewrite and apache redirects]]></title>
    <link href="http://www.nathenharvey.com/blog/2010/07/16/testing-mod-rewrite-and-apache-redirects/"/>
    <updated>2010-07-16T09:00:00-04:00</updated>
    <id>http://www.nathenharvey.com/blog/2010/07/16/testing-mod-rewrite-and-apache-redirects</id>
    <content type="html"><![CDATA[<p>At <a href="http://www.customink.com">CustomInk</a>, we recently migrated from mongrel to Passenger for our Ruby on Rails website. This migration included a full rewrite of our apache configuration files.</p>

<p>With over 500 redirect and rewrite rules in place I needed a way to ensure my copy-n-paste skills were up to snuff and that we didn&#8217;t loose any redirects along the way.</p>

<p>In my search for help, I found a <a href="http://www.viget.com/extend/test-drive-mod-rewrite-rules-with-testunit/">blog post by Patrick Reagan from Viget labs</a> that described a method for writing tests that will verify all the rewrite rules and redirects. Patrick&#8217;s ideas were packaged up into a gem and available on <a href="http://github.com/eightbitraptor/http_redirect_test">github</a>.</p>

<p>I can now write up tests like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">should_redirect</span> <span class="s2">&quot;/cink/ideas/ideas.jsp&quot;</span><span class="p">,</span> <span class="ss">:to</span> <span class="o">=&gt;</span> <span class="s2">&quot;/inspiration/&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>So now I can to some TDC (test-driven configuration) whenever I get a request for a new redirect.</p>

<p>What other methods have you used to test your rewrite rules?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Passenger and PHP]]></title>
    <link href="http://www.nathenharvey.com/blog/2010/06/11/passenger-and-php/"/>
    <updated>2010-06-11T09:25:00-04:00</updated>
    <id>http://www.nathenharvey.com/blog/2010/06/11/passenger-and-php</id>
    <content type="html"><![CDATA[<p>I recently migrated a site from mongrel to passenger. Today I learned that the wordpress site that was served up by the same webserver wasn&#8217;t working anymore.</p>

<p>Compared the configurations and everything looked OK, no changes were made as part of the migration. PHP module was being loaded, URL was being properly aliased, etc. Watched my logs and saw that Passenger was attempting to serve up the request which is not what I wanted.</p>

<p>A quick update to my Directory&#8217;s definition and the issue was fixed. I had to explicitly disable Passenger using <code>PassengerEnabled off</code> as seen below:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='apache'><span class='line'>  <span class="nb">Alias</span> <span class="sx">/blog</span> <span class="sx">/shared/www/blog</span>
</span><span class='line'>  <span class="nt">&lt;Directory</span> <span class="s">/shared/www/blog</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nb">DirectoryIndex</span> index.php
</span><span class='line'>    <span class="nb">PassengerEnabled</span> <span class="k">off</span>
</span><span class='line'>  <span class="nt">&lt;/Directory&gt;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
