<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: apache | Nathen Harvey]]></title>
  <link href="http://www.nathenharvey.com/blog/categories/apache/atom.xml" rel="self"/>
  <link href="http://www.nathenharvey.com/"/>
  <updated>2011-12-29T17:19:17-05:00</updated>
  <id>http://www.nathenharvey.com/</id>
  <author>
    <name><![CDATA[Nathen Harvey]]></name>
    <email><![CDATA[nathen@nathenharvey.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Testing mod_rewrite and apache redirects]]></title>
    <link href="http://www.nathenharvey.com/blog/2010/07/16/testing-mod-rewrite-and-apache-redirects/"/>
    <updated>2010-07-16T09:00:00-04:00</updated>
    <id>http://www.nathenharvey.com/blog/2010/07/16/testing-mod-rewrite-and-apache-redirects</id>
    <content type="html"><![CDATA[<p>At <a href="http://www.customink.com">CustomInk</a>, we recently migrated from mongrel to Passenger for our Ruby on Rails website. This migration included a full rewrite of our apache configuration files.</p>

<p>With over 500 redirect and rewrite rules in place I needed a way to ensure my copy-n-paste skills were up to snuff and that we didn't loose any redirects along the way.</p>

<p>In my search for help, I found a <a href="http://www.viget.com/extend/test-drive-mod-rewrite-rules-with-testunit/">blog post by Patrick Reagan from Viget labs</a> that described a method for writing tests that will verify all the rewrite rules and redirects. Patrick's ideas were packaged up into a gem and available on <a href="http://github.com/eightbitraptor/http_redirect_test">github</a>.</p>

<p>I can now write up tests like:</p>

<p><code>ruby
should_redirect "/cink/ideas/ideas.jsp", :to =&gt; "/inspiration/"
</code></p>

<p>So now I can to some TDC (test-driven configuration) whenever I get a request for a new redirect.</p>

<p>What other methods have you used to test your rewrite rules?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Passenger and PHP]]></title>
    <link href="http://www.nathenharvey.com/blog/2010/06/11/passenger-and-php/"/>
    <updated>2010-06-11T09:25:00-04:00</updated>
    <id>http://www.nathenharvey.com/blog/2010/06/11/passenger-and-php</id>
    <content type="html"><![CDATA[<p>I recently migrated a site from mongrel to passenger. Today I learned that the wordpress site that was served up by the same webserver wasn't working anymore.</p>

<p>Compared the configurations and everything looked OK, no changes were made as part of the migration. PHP module was being loaded, URL was being properly aliased, etc. Watched my logs and saw that Passenger was attempting to serve up the request which is not what I wanted.</p>

<p>A quick update to my Directory's definition and the issue was fixed. I had to explicitly disable Passenger using <code>PassengerEnabled off</code> as seen below:</p>

<p>``` apache
  Alias /blog /shared/www/blog
  <Directory /shared/www/blog></p>

<pre><code>DirectoryIndex index.php 
PassengerEnabled off
</code></pre>

<p>  </Directory>
```</p>
]]></content>
  </entry>
  
</feed>
